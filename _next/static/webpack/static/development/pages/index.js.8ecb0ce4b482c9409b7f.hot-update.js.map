{"version":3,"file":"static/webpack/static/development/pages/index.js.8ecb0ce4b482c9409b7f.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Link from \"next/link\";\nimport { Fragment } from \"react\";\nimport OpenGraph from \"../components/opengraph.js\";\n\nfunction BlogList({ data }) {\n\tconst list =\n\t\tdata.blog.length > 0\n\t\t\t? data.blog.map(blogArray => (\n\t\t\t\t\t<Fragment key={blogArray.fileName}>\n\t\t\t\t\t\t<style jsx>{`\n\t\t\t\t\t\t\ta {\n\t\t\t\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\t\t\t\tcolor: black;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ta:visited {\n\t\t\t\t\t\t\t\tcolor: #CCC;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ta:hover {\n\t\t\t\t\t\t\t\ttext-decoration: underline !important;\n\t\t\t\t\t\t\t\tcursor: pointer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t`}</style>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\thref={`${data.basepath}/article/[title]`}\n\t\t\t\t\t\t\tas={`${data.basepath}/article/${blogArray.fileName}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<a>\n\t\t\t\t\t\t\t\t<li>{blogArray.title}</li>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Fragment>\n\t\t\t  ))\n\t\t\t: \"à¹„à¸¡à¹ˆà¸¡à¸µà¹€à¸™à¸·à¹‰à¸­à¸«à¸²à¹ƒà¸™à¸‚à¸“à¸°à¸™à¸µà¹‰\";\n\n\treturn <ul>{list}</ul>;\n}\nfunction Index(props) {\n\treturn (\n\t\t<>\n\t\t\t<OpenGraph\n\t\t\t\tbasedomain={props.basedomain}\n\t\t\t\tbasepath={props.basepath}\n\t\t\t\tdescription={props.description}\n\t\t\t\thomepage={true}\n\t\t\t/>\n\t\t\t<h1>ðŸ“° BLOG</h1>\n\t\t\t<BlogList data={props} />\n\t\t</>\n\t);\n}\n\nexport async function getStaticProps() {\n\tconst fs = require(\"fs\");\n\tconst path = require(\"path\");\n\tconst fm = require(\"front-matter\");\n\tconst markdownArray = fs.readdirSync(\"./markdown\");\n\t//Sort by creation date\n\tmarkdownArray.sort((a, b) => {\n\t\tconst A = fm(\n\t\t\tfs.readFileSync(\"./markdown/\" + a, { encoding: \"utf8\" })\n\t\t).attributes.date.split(\"/\");\n\t\tconst B = fm(\n\t\t\tfs.readFileSync(\"./markdown/\" + b, { encoding: \"utf8\" })\n\t\t).attributes.date.split(\"/\");\n\t\treturn new Date(B[2], B[1], B[0]) - new Date(A[2], A[1], A[0]);\n\t});\n\tconst contentList = markdownArray.map(markdown => {\n\t\tconst file = fs.readFileSync(`./markdown/${markdown}`, \"utf8\");\n\t\tconst content = fm(file);\n\t\treturn {\n\t\t\tfileName: path.parse(markdown).name,\n\t\t\ttitle: content.attributes.title\n\t\t};\n\t});\n\n\treturn {\n\t\tprops: {\n\t\t\tblog: contentList,\n\t\t\tbasedomain: process.env.baseDomain,\n\t\t\tbasepath: process.env.basePath,\n\t\t\tdescription:\n\t\t\t\t\"Latest blog - \" +\n\t\t\t\tcontentList\n\t\t\t\t\t.map(map => map.title)\n\t\t\t\t\t.splice(0, 10)\n\t\t\t\t\t.join(\", \")\n\t\t}\n\t};\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;AAwCA;;;;A","sourceRoot":""}